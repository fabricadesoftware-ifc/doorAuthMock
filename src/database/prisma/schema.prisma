generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id         Int          @id @default(autoincrement())
  name       String
  email      String       @unique
  password   String
  isSuper    Boolean      @default(false)
  created_at DateTime     @default(now())
  token     String?       @unique
  updated_at DateTime?    @updatedAt
  isVerified Boolean      @default(false)
  tags_owned rfidTag[]    @relation("UserTags")
  logs logs[]
}

model rfidTag {
  id             Int      @id @default(autoincrement())
  rfid           String   @unique
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  used_times     Int      @default(0)
  last_time_used DateTime @default(now())
  valid          Boolean  @default(false)
  user_id        Int?
  user           user?    @relation("UserTags", fields: [user_id], references: [id])

  logs logs[]
}

model logs {
  id         Int          @id @default(autoincrement())
  type       String   
  message    String
  date      DateTime      @default(now()) @db.Timestamptz(3)
  user_id    Int?
  user       user?        @relation(fields: [user_id], references: [id])
  rfid_id    Int?
  rfid       rfidTag?     @relation(fields: [rfid_id], references: [id])
}

model ip {
  id         Int          @id @default(autoincrement())
  ip         String       @unique
  mode       Boolean      @default(false)
  created_at DateTime     @default(now())
  updated_at DateTime?    @updatedAt
}